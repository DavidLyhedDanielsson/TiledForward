#version 450 core

layout(location = 0) uniform sampler2D inImage;
layout(location = 1, rgba8) uniform image2D outImage;

/*uniform mat4 viewProjectionMatrix;

struct LightData
{
    vec3 position;
    float strength;
    vec3 color;
    float padding;
};

layout (std140) buffer Lights
{
    vec3 padding;
    float ambientStrength;
    LightData lights[];
};

shared int lightCount;

bool PointInWorkGroup(uvec2 workGroup, uvec2 workGroupSize, vec2 point)
{
    return point.x >= workGroup.x * workGroupSize.x
            && point.x < (workGroup.x + 1) * workGroupSize.x
            && point.y >= workGroup.y * workGroupSize.y
            && point.y < (workGroup.y + 1) * workGroupSize.y;
}*/

layout(local_size_x = 32, local_size_y = 32) in;
void main()
{
    //vec4 inBuffer = imageLoad(inImage, ivec2(gl_GlobalInvocationID));
    //vec2 texCoords = vec2(gl_GlobalInvocationID.x / 1280.0f, gl_GlobalInvocationID.y / 720.0f);
    //vec4 inBuffer = texture(inImage, texCoords);

    //if(inBuffer.x > 0.9999f)
    //    imageStore(outImage, ivec2(gl_GlobalInvocationID), vec4(1.0f, 0.0f, 0.0f, 1.0f));
    //imageStore(outImage, ivec2(gl_GlobalInvocationID), vec4(1.0f, 0.0f, 0.0f, 1.0f));
    /*if(gl_LocalInvocationIndex == 0)
        lightCount = 0;

    barrier();

    for(uint i = gl_LocalInvocationIndex; i < lights.length(); i += gl_WorkGroupSize.x * gl_WorkGroupSize.y)
    {
        vec4 currentLightPosition = viewProjectionMatrix * vec4(lights[i].position, 1.0f);
        currentLightPosition /= currentLightPosition.w;

        if(currentLightPosition.z < -1.0f || currentLightPosition.z > 1.0f)
            continue;

        vec2 texCoords = (currentLightPosition.xy + 1.0f) * 0.5f;
        ivec2 imageCoords = ivec2(texCoords.x * 1280, texCoords.y * 720);

        if(PointInWorkGroup(gl_WorkGroupID.xy, gl_WorkGroupSize.xy, imageCoords))
            atomicAdd(lightCount, 1);
    }

    barrier();

    if(lightCount > 0)
        imageStore(outImage, ivec2(gl_GlobalInvocationID), vec4(lightCount / 4.0f, lightCount / 4.0f, lightCount / 4.0f, 1.0f));*/
}